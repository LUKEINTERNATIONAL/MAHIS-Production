import{d as g,af as o,be as B,b1 as F,a1 as U,ai as D,ah as P,aP as y,cb as M,aQ as k,aO as C,aR as V,M as T,G as $,E as z,ae as O,c0 as E,I as H,a8 as L,$ as R,bC as W,H as s,N as A,f as N,J as d,l as i}from"./vendor-BTD4y0_l.js";import{aP as v,Q as G,T as Q,S as c,t as n,N as p,aM as j,u as q,l as x,_ as J}from"./index-ZPWc6jp0.js";import{D as K}from"./DemographicBar-BCBY1Btr.js";import{S as X,p as Y,q as Z,r as tt,s as et,t as at,w as ot}from"./Stepper-CKUaLLOf.js";import{f as u,c as r,a as m}from"./formatServerData-DGA-X-zk.js";import{B as st}from"./BasicFooter-D8Xhydao.js";import{_ as nt}from"./NextAppointment-B9Lao4Ty.js";import{_ as it}from"./SetEncounter.vue_vue_type_script_lang-DIAWjwr7.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-DR6FmxCR.js";import"./OPDOutcome-DzJ4LQha.js";import"./patient_complaints_service-BjpPOSLd.js";import"./DashBox-BhCmLRS_.js";import"./useExposeFromStandardForm-C6-IUGrn.js";import"./BasicForm-BkLYNJPw.js";import"./DateInputField-CnArPP2O.js";import"./drug_prescription_service-BqNniboM.js";import"./drug_service-C4nLkRc3.js";import"./Outcome-BlMRTMLL.js";import"./VitalsMixin.vue_vue_type_script_lang-D9_yTbnw.js";import"./TreatmentPlan-D2-spiYH.js";import"./previousDiagnosis-CtyDWlMH.js";import"./group_validation-JnxDZ51z.js";import"./FeatusModal-B_pNg4Zu.js";import"./BasicCard-yc_dq3mv.js";import"./PastObstreticHistoryStore-CjFNYVOa.js";import"./SaveProgressModal-oNbpIV-H.js";import"./lab_order-C8nmm6Vz.js";import"./UpcomingFeature-Bz96aPo2.js";import"./ncd_appointment_service-CZvEC4S8.js";class rt extends v{constructor(t,a){super(t,57,a)}}class h extends v{constructor(t,a){super(t,151,a)}}const lt=g({name:"Home",mixins:[nt,it],components:{BasicFooter:st,IonContent:L,IonHeader:H,IonMenuButton:E,IonPage:O,IonTitle:z,IonToolbar:$,Toolbar:Q,ToolbarSearch:G,DemographicBar:K,IonButton:T,IonCard:V,IonCardContent:C,IonCardHeader:k,IonCardSubtitle:M,IonCardTitle:y,IonAccordion:P,IonAccordionGroup:D,IonItem:U,IonLabel:F,IonModal:B,Stepper:X},data(){return{wizardData:[{title:"Medical follow-up",class:"common_step",checked:"",icon:!1,disabled:!1,number:1,last_step:""},{title:"Persistent behaviours and symptoms",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Intimate partner violence(IPV)",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:"last_step"}],StepperData:[{title:"Medical follow-up",component:"MedicalFollowUp",value:"1"},{title:"Persistent behaviours and symptoms",component:"PersistentBehaviour",value:"2"},{title:"Intimate partner violence(IPV)",component:"Ipv",value:"3"}],isOpen:!1,iconsContent:x}},computed:{...o(ot,["medicalFollowUp"]),...o(at,["persistentBehaviour"]),...o(et,["physiologicalSymptoms"]),...o(tt,["ipv","ipv1","additionalCare","safety_assessment","physical_violence","beaten_pregnant","strangling","murder_threat","referrals","constant_jealous","woman_threatened"]),...o(Z,["fatalMovement"]),...o(q,["patient"])},mounted(){this.markWizard()},setup(){return{chevronBackOutline:W,checkmark:R}},methods:{markWizard(){},getSaveFunction(){},getFormatedData(e){return e.map(t=>t==null?void 0:t.data)},async saveData(){this.saveMedicalFollowUp(),this.savePersistentBehaviours(),this.saveIPV(),await j(),this.$router.push("contact")},async buildMedicalFollowUp(){return[...await u(this.medicalFollowUp),...await r(this.medicalFollowUp),...await m(this.medicalFollowUp)]},async validations(e,t){return t.every(a=>Y(e,a,this[a]))},async buildPersistentBehaviours(){return[...await u(this.persistentBehaviour),...await r(this.persistentBehaviour),...await m(this.persistentBehaviour)]},async buildCurrentPhysiologicalSymptoms(){return[...await r(this.physiologicalSymptoms)]},async buildIPV(){return[...await r(this.ipv),...await m(this.ipv)]},async buildFetalMovement(){return[...await u(this.fatalMovement)]},async saveMedicalFollowUp(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new rt(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create medical follow up encounter");if(!await t.saveObservationList(await this.buildMedicalFollowUp()))return n("Unable to create patient Medical follow up details!");p("Medical follow up has been created")}console.log(await this.buildMedicalFollowUp())},async savePersistentBehaviours(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create persistent behaviour encounter");if(!await t.saveObservationList(await this.buildPersistentBehaviours()))return n("Unable to create patient persistent behaviour details!");p("Persistent behaviour details have been created")}console.log(await this.buildPersistentBehaviours())},async saveIPV(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create IPV encounter");if(!await t.saveObservationList(await this.buildIPV()))return n("Unable to create patient IPV details!");p("IPV details have been created")}console.log(await this.buildIPV())}}});function ct(e,t,a,l,pt,ut){const w=s("Toolbar"),b=s("DemographicBar"),f=s("Stepper"),I=s("ion-content"),S=s("BasicFooter"),_=s("ion-page");return N(),A(_,null,{default:d(()=>[i(w),i(I,{fullscreen:!0},{default:d(()=>[i(b),i(f,{stepperTitle:"Symptoms  and follow up",wizardData:e.wizardData,onUpdateStatus:e.markWizard,StepperData:e.StepperData,backUrl:e.userRoleSettings.url,backBtn:e.userRoleSettings.btnName,getSaveFunction:e.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),i(S,{onFinishBtn:t[0]||(t[0]=mt=>e.saveData())})]),_:1})}const Nt=J(lt,[["render",ct]]);export{Nt as default};
