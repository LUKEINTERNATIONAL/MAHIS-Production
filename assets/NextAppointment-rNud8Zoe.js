var Nt=Object.defineProperty;var Bt=(e,t,a)=>t in e?Nt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;var X=(e,t,a)=>Bt(e,typeof t!="symbol"?t+"":t,a);import{d as z,ah as se,M as tt,ai as Le,a7 as at,X as ye,dB as nt,dH as st,aj as Ne,$ as me,E as be,G as Be,a4 as De,I as Se,bi as ot,N as Me,a_ as it,R as Ve,H as D,O as ee,f as I,J as l,l as o,k as S,K as x,Q as J,e as L,F as ie,P as Ce,aV as G,ct as rt,r as w,c as oe,w as _e,a as Ie,u as N,aO as Et,n as Pt,b6 as Ge,cK as $t,D as lt,m as Z,b5 as Tt,b2 as dt,bf as xt,aU as Rt,L as Fe,a6 as Ft,p as ue,aS as Ht,aR as Ut,av as Vt,aP as Jt,a3 as zt,br as qt,bn as Wt,bM as Gt,aM as Kt}from"./vendor-C5yr_jO5.js";import{M as ke,aT as Yt,S as k,q as le,H as M,aN as Ae,K as de,u as q,_ as j,aA as Ke,k as te,O as pe,aP as Q,aB as Qt,t as ae,aG as He,v as jt,bg as Xt,bh as Zt,by as ea,X as ct,U as Ye,n as ut,h as ta,s as Qe,b4 as aa,bf as na,B as pt,bp as sa,Q as K,aW as mt,ag as xe,bz as oa,aY as ht,P as gt,a8 as ia,aQ as ra,bA as la,bB as da,ar as ca,aI as Ee,aJ as Pe,a1 as ua,b1 as Y,A as we,bC as pa,d as ma,ay as Re,D as ha,az as ga,y as je}from"./index-Ux39IhmF.js";import{D as fa}from"./DashBox-Cq2ovd1T.js";import{B as W}from"./BasicForm-D83YLYxE.js";import{u as Ue,P as ft,L as va}from"./lab_order-SL-rYnzd.js";import{v as Xe}from"./group_validation-DO3icBvf.js";import{l as ve}from"./lodash-NJiRuGo9.js";import{g as _a,a as vt,D as ne}from"./drug_prescription_service-CwNy4SrL.js";import{A as ya}from"./ncd_appointment_service-BizA8rqQ.js";import{D as ba}from"./DateInputField-B4Zx2Ua2.js";const Da=z({components:{IonButtons:it,IonButton:Me,IonModal:ot,IonHeader:Se,IonContent:De,IonToolbar:Be,IonTitle:be,IonItem:me,IonList:Ne,IonAvatar:st,IonImg:nt,IonLabel:ye,IonPage:at,IonMenu:Le,BasicForm:W,IonFooter:tt,DynamicButton:ke},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...se(q,["patient"]),...se(Ue,["labResults"])},mounted(){},methods:{dismiss(){Ve.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:M.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let a=0;a<this.patient.labOrders.unsaved.length;a++)if(this.patient.labOrders.unsaved[a].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[a].tests&&this.patient.labOrders.unsaved[a].tests.length>0){this.patient.labOrders.unsaved[a].tests[0].result=e,t=!0;break}if(!t){for(let a=0;a<this.patient.labOrders.saved.length;a++)if(this.patient.labOrders.saved[a].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[a].tests&&this.patient.labOrders.saved[a].tests.length>0){this.patient.labOrders.saved[a].tests[0].result=e;break}}await Ae(this.patient),de("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var s;let a;k.getUseIndexDBStatus()||k.getModsStatus()?a=await le("testResultIndicators",{whereClause:{test_type_id:t.id}}):a=await ft.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(s=a[0])==null?void 0:s.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const a=Ue();t=="not_save"?(await Yt(),a.setLabResults(!1)):a.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),Sa={class:"modal_wrapper"},Ca={class:"center text_12"};function Ia(e,t,a,s,n,h){const r=D("ion-title"),d=D("ion-button"),p=D("ion-buttons"),m=D("ion-toolbar"),y=D("ion-header"),f=D("basic-form"),v=D("ion-row"),R=D("ion-content"),C=D("DynamicButton"),g=D("ion-footer"),E=D("ion-modal");return I(),ee(E,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=B=>e.$emit("closePopover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(y,null,{default:l(()=>[o(m,null,{default:l(()=>[o(r,null,{default:l(()=>[S("b",null,"Enter lab results for ("+x(e.labResults[0].name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=B=>e.$emit("closeModal"))},{default:l(()=>[...t[3]||(t[3]=[J("Close",-1)])]),_:1})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:l(()=>[S("div",Sa,[S("div",Ca,[o(v,null,{default:l(()=>[o(f,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),o(g,{translucent:!0},{default:l(()=>[o(m,null,{default:l(()=>[o(C,{onClick:t[1]||(t[1]=B=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const ka=j(Da,[["render",Ia],["__scopeId","data-v-4bf376f8"]]),Oa=z({components:{IonButtons:it,IonButton:Me,IonModal:ot,IonHeader:Se,IonContent:De,IonToolbar:Be,IonTitle:be,IonItem:me,IonList:Ne,IonAvatar:st,IonImg:nt,IonLabel:ye,IonPage:at,IonMenu:Le,BasicForm:W,IonFooter:tt,DynamicButton:ke},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){Ve.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),wa={class:"modal_wrapper"},Ma={class:"center text_12"};function Aa(e,t,a,s,n,h){const r=D("ion-title"),d=D("ion-button"),p=D("ion-buttons"),m=D("ion-toolbar"),y=D("ion-header"),f=D("ion-skeleton-text"),v=D("ion-col"),R=D("ion-row"),C=D("ion-content"),g=D("ion-modal");return I(),ee(g,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=E=>e.$emit("closePopover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(y,null,{default:l(()=>[o(m,null,{default:l(()=>[o(r,null,{default:l(()=>[S("b",null,"Lab results for ("+x(e.content.name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=E=>e.$emit("closeModal"))},{default:l(()=>[...t[2]||(t[2]=[J("Close",-1)])]),_:1})]),_:1})]),_:1})]),_:1}),o(C,{class:"ion-padding"},{default:l(()=>[S("div",wa,[S("div",Ma,[o(R,null,{default:l(()=>[(I(!0),L(ie,null,Ce(e.content.result,(E,B)=>(I(),ee(v,{size:"4",key:B},{default:l(()=>[o(R,null,{default:l(()=>[o(v,{size:"8"},{default:l(()=>[E.indicator&&E.indicator.name?(I(),L(ie,{key:0},[J(x(E.indicator.name),1)],64)):(I(),ee(f,{key:1,animated:"",style:{width:"80%"}}))]),_:2},1024),o(v,{class:"bold",size:"0.5"},{default:l(()=>[...t[3]||(t[3]=[J(":",-1)])]),_:1}),o(v,{class:"bold",size:"2"},{default:l(()=>[J(x(E.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const La=j(Oa,[["render",Aa],["__scopeId","data-v-cc17eb52"]]),Na=z({__name:"AddLabTestModal",setup(e){const t=q(),{patient:a}=G(t);rt();const s=te,n=w(""),h=w(""),r=w(""),d=w(""),p=w(null),m=oe(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:d.value,grid:{s:"6"},icon:te.search,validation:Ke.required,onChange:C=>{n.value=C.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:te.search,validation:Ke.required,value:r.value.length==1?r.value[0]:"",options:r.value.length>1?r.value:[]}]);_e(n,async C=>{if(C)try{r.value=await y(C)}catch(g){r.value=[]}else r.value=[]});const y=async C=>{let g;return k.getUseIndexDBStatus()||k.getModsStatus()?g=await le("specimens"):g=await pe.getSpecimens("",1e3),await Q.getConceptSet(C,"",{names:g.map(B=>B.name)})};_e(a,async()=>{h.value=[...a.value.labOrders.saved,...a.value.labOrders.unsaved]},{deep:!0});const f=()=>{Ve.dismiss()},v=async()=>k.getUseIndexDBStatus()||k.getModsStatus()?await le("testTypes"):await pe.getTestTypes(),R=async()=>{var _,O,P,U,F,H;if(p.value.validateForm()){ae("Test not saved");return}if(!p.value){console.error("Form reference is not available");return}const C=p.value.getFormValues(),g=[{concept_id:C.test.concept_id,name:C.test.name,specimen:C.specimen.name,reason:"Routine",specimenConcept:await Q.getConceptID(C.specimen.name,!0)}];let B=(await pe.buildLabOrders("",g))[0];B.order_date=B.date,B.specimen.name=C.specimen.name,B.tests[0].name=C.test.name;const c=JSON.parse(JSON.stringify(a.value));(P=(O=(_=c.labOrders)!=null?_:c.labOrders={}).unsaved)!=null||(O.unsaved=[]),(H=(F=(U=c.labOrders)!=null?U:c.labOrders={}).saved)!=null||(F.saved=[]),c.labOrders.unsaved.push(B),await Ae(c),h.value=[...c.labOrders.saved,...c.labOrders.unsaved],f()};return Ie(async()=>{d.value=await v()}),(C,g)=>{const E=D("ion-icon"),B=D("ion-col"),c=D("ion-row"),_=D("ion-footer");return I(),L(ie,null,[o(N(Se),{style:{display:"flex","justify-content":"space-between"}},{default:l(()=>[o(N(be),{class:"modalTitle"},{default:l(()=>[...g[2]||(g[2]=[J("Add Lab Test",-1)])]),_:1}),o(E,{onClick:g[0]||(g[0]=O=>f()),style:{"padding-top":"10px","padding-right":"10px"},icon:N(s).cancel},null,8,["icon"])]),_:1}),o(N(De),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:l(()=>[o(Qt,{formData:m.value,ref_key:"formRef",ref:p},null,8,["formData"])]),_:1}),o(_,{collapse:"fade",class:"ion-no-border"},{default:l(()=>[o(c,null,{default:l(()=>[o(B,null,{default:l(()=>[o(ke,{onClick:g[1]||(g[1]=O=>R()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),Ba=j(Na,[["__scopeId","data-v-3e17251e"]]),Ea={class:"container"},Pa={class:"table-responsive"},$a=z({__name:"LabOrdersList",props:{propOrders:{default:()=>[]}},setup(e){const t=e,a=Et(),s=rt(),n=q(),h=Ue(),r=He(),d=jt(),{patient:p}=G(n),{labResults:m}=G(h),{investigations:y}=G(r),{patientsWaitingForVitals:f,patientsWaitingForConsultation:v,patientsWaitingForLab:R,patientsWaitingForDispensation:C}=G(d),g=w(),E=w([]),B=w(["Lab Test","Specimen","Accession Number","Order Date","Result","Action"]);w(!0);const c=w(!1);w(!1);const _=w([]),O=w([]),P=w([]);w([]),w(!1);const U=w(""),F=w(!1),H=w(!1),$e=w(""),Oe=te;Xt(["#006401"]),Zt(["#636363"]);const Je=w({responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await It()}},{text:" <b>Send to Lab </b>",className:"send-lab text-white",attr:{id:"send-to-lab-btn"},action:async()=>{await kt()}}]});oe(()=>P.value.some(u=>u.btn&&u.btn.includes("enter_results")));const yt=async()=>{F.value=!1,await ce()},bt=()=>{const u=document.getElementById("send-to-lab-btn");u&&(u.style.display="none")},Dt=()=>{const u=document.getElementById("send-to-lab-btn");u&&(u.style.display="inline")},St=()=>{Ye.getProgramID()==14&&!Ye.isLabTechnician()&&c.value?Dt():bt()},Ct=async u=>{const A=[{concept_id:await Q.getConceptID(u.name,!0),name:u.name,specimen:u.specimen,reason:"Routine",specimenConcept:await Q.getConceptID(u.specimen,!0)}];let i=(await pe.buildLabOrders("",A))[0];i.order_date=i.date,i.specimen.name=await Q.getConceptName(i.specimen.concept_id),i.tests[0].name=await Q.getConceptName(i.tests[0].concept_id),p.value.labOrders.unsaved.push(i),await Ae(p.value)},It=async()=>{await ut(Ba,{class:"lab-results-modal"},!0,{title:"name"}),await ce()},kt=async()=>{await ta("Do you want to send this patient to the lab?",{cancelBtnLabel:"Cancel",confirmBtnLabel:"Send to Lab",returnName:!0})=="Confirm"&&await Ot()},Ot=async()=>{try{const u=String(localStorage.getItem("locationID"));if(!u){Qe("Location not found");return}await aa.addPatientToStage(p.value,"LAB"),await d.refresh(u),await a.push("home"),de("The patient successfully sent to the lab. You may now attend to other patients.")}catch(u){console.error("Error sending to lab:",u),Qe("Failed to send patient to lab")}},ze=async()=>{var A,b,i,V,$;if(!((A=p.value)!=null&&A.labOrders)||(_.value=[...(i=(b=p.value)==null?void 0:b.labOrders)==null?void 0:i.saved,...($=(V=p.value)==null?void 0:V.labOrders)==null?void 0:$.unsaved],!_.value))return;const u=await _.value.filter(T=>M.toStandardHisFormat(M.sessionDate())===M.toStandardHisFormat(T.order_date));u.length>0?y.value[0].selectedData=u:y.value[0].selectedData=""},wt=async(u,A)=>{var i,V,$;if(await ct("Do you want to delete ".concat(u.tests[0].name," ?"),A)){const T=JSON.parse(JSON.stringify(p.value));T.labOrders.saved.some(re=>{var ge,fe;return re.order_date===u.order_date&&((ge=re==null?void 0:re.tests[0])==null?void 0:ge.name)==((fe=u==null?void 0:u.tests[0])==null?void 0:fe.name)})?(T.labOrders.saved=qe(T.labOrders.saved,u.tests[0].name,u.order_date),($=(V=(i=T.labOrders)!=null?i:T.labOrders={}).voided)!=null||(V.voided=[]),T.labOrders.voided.push({orderId:u.id,reason:"Mistake entry"})):T.labOrders.unsaved=qe(T.labOrders.unsaved,u.tests[0].name,u.date),await Ae(T)}await ce()},qe=(u,A,b)=>u.filter(i=>(i.order_date===b&&(i.tests=i.tests.filter(V=>V.name!==A)),i.tests.length>0)),Mt=async u=>{let A;k.getUseIndexDBStatus()||k.getModsStatus()?A=await le("testResultIndicators",{whereClause:{test_type_id:u.concept_id}}):A=await ft.getTestIndicatorsWithID(u.concept_id);const b=[u,{validationStatus:"",data:{rowData:[{colData:[]}]}}];A.forEach(i=>{let V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:""};if(i.name=="RBS"&&(V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="FBS"&&(V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="MRDT"||i.name=="Tuberculosis program"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="Lam"||i.name=="CrAg"||i.name=="CD4 count"||i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Urine Ketones"||i.name=="HIV test"){let $=[];(i.name=="MRDT"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="CrAg"||i.name=="Lam")&&($=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),i.name=="Tuberculosis program"&&($=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),i.name=="CD4 count"&&($=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Ketones"||i.name=="Urine Ketones")&&($=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),i.name=="HIV test"&&($=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),V={inputHeader:i.name,icon:te.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:$,id:i.concept_id,idName:"district_id"}}b[1].data.rowData[0].colData.push(V)}),h.setLabResults(b),F.value=!0,_.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved]},At=async u=>{U.value=u,H.value=!0},ce=async()=>{if(!p.value.labOrders)return;_.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved];const u=Lt(_.value),A=k.getProgramID()==32?[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]]:[],b=A.filter($=>!u.some(T=>T[0]===$[0])),i=u.filter($=>A.some(T=>T[0]===$[0])),V=u.filter($=>!i.some(T=>T[0]===$[0]));E.value=[...i,...b,...V],St(),await ze(),Ge.use($t)},Lt=(u,A)=>(c.value=!1,u.length>0?u.flatMap(b=>b.tests.flatMap(i=>{var re,ge,fe,We;const V='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(i),"'>Enter Result</button> "),$='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(Oe.attach2,"</button>"),T='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(Oe.view2,"</button> ");let he=V+$;((re=i==null?void 0:i.result)==null?void 0:re.length)==1?he=(i==null?void 0:i.result)!=null?((ge=i==null?void 0:i.result[0])==null?void 0:ge.value_modifier)+((fe=i==null?void 0:i.result[0])==null?void 0:fe.value):null:((We=i==null?void 0:i.result)==null?void 0:We.length)>1?(i==null||i.result,he=T):b!=null&&b.accession_number&&(c.value=!0);let Te="";return b!=null&&b.accession_number?Te='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(b),"'>").concat(Oe.print2,"</button>"):he="",[[i==null?void 0:i.name,b==null?void 0:b.specimen.name,(b==null?void 0:b.accession_number)||"",M.toStandardHisFormat(b==null?void 0:b.order_date),he,Te+'\n                        <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(b),"'>").concat(Oe.delete2,"</button>\n                        ")]]})):[]);return Ie(async()=>{k.getProgramID()==14&&Je.value.buttons.push(),await ze(),await ce(),Pt(()=>{const u=g.value.dt;u.columns.adjust().draw(),u.on("click",".result-btn",A=>{const b=A.target.getAttribute("data-id");Mt(JSON.parse(b))}),u.on("click",".view-btn",A=>{const b=A.target.getAttribute("data-id");At(JSON.parse(b))}),u.on("click",".delete-btn",A=>{const b=A.target.getAttribute("data-id");wt(JSON.parse(b),A)}),u.on("click",".order-btn",A=>{const b=A.target.getAttribute("data-id");Ct(JSON.parse(b))})}),_.value=t.propOrders,$e.value=new ea(p.value.patientID),O.value=await k.getUserRoles()}),_e(()=>s,async()=>{await ce()},{deep:!0}),_e(()=>p.value,async()=>{await ce()},{deep:!0}),(u,A)=>(I(),L("div",Ea,[S("div",Pa,[o(N(Ge),{ref_key:"dataTable",ref:g,options:Je.value,data:E.value,class:"display nowrap modern-table",width:"100%"},{default:l(()=>[S("thead",null,[S("tr",null,[(I(!0),L(ie,null,Ce(B.value,b=>(I(),L("th",{key:b},x(b),1))),128))])])]),_:1},8,["options","data"])]),o(La,{popoverOpen:H.value,content:U.value,onCloseModal:A[0]||(A[0]=b=>H.value=!1)},null,8,["popoverOpen","content"]),o(ka,{popoverOpen:F.value,onSaved:yt,onCloseModal:A[1]||(A[1]=b=>F.value=!1)},null,8,["popoverOpen"])]))}}),Ta=j($a,[["__scopeId","data-v-a0d68626"]]),xa=z({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=k.getUserRoles();const t=k.getProgramID(),a=k.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),a=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),a=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),Ze=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],Ra=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],Fa=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],Ha=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],Ua=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],Va=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],Ja=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],za=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],qa=lt("RadiologyStore",{state:()=>({head:[...Ze],neck:[...Ra],chest:[...Fa],abdomen:[...Ha],upper_extremity:[...Ua],spine:[...Va],pelvis:[...Ja],lower_extremity:[...za]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[...ve.cloneDeep(Ze)]}}}),Wa=["innerHTML"],Ga={class:"scrollable-container"},Ka={key:0,class:"form-section"},Ya={key:1,class:"form-section"},Qa={key:2,class:"form-section"},ja={key:3,class:"form-section"},Xa={key:4,class:"form-section"},Za={key:5,class:"form-section"},en={key:6,class:"form-section"},tn={key:7,class:"form-section"},an=z({__name:"RadiologyInvestigation",setup(e){const t=qa(),{head:a,neck:s,chest:n,abdomen:h,upper_extremity:r,spine:d,pelvis:p,lower_extremity:m}=G(t),y=w(te),f=w([]),v=(C,g,E)=>{document.querySelectorAll("#".concat(C," path")).forEach(c=>{c.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(g," line")).forEach(c=>{c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(g," rect")).forEach(c=>{c.classList.toggle("bright-green-fill"),c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(g," path")).forEach(c=>{c.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(g," circle")).forEach(c=>{c.classList.toggle("bright-green-fill")});const B=f.value.findIndex(c=>c.id===E);B>=0?f.value.splice(B,1):f.value.unshift({id:E,active:!0})},R=()=>{const C=document.getElementById("SPINE");C.style.display==="none"||C.style.display==""?C.style.display="block":C.style.display="none",v("SPINE","SPINE_LABEL-2","spine")};return Ie(()=>{const C=document.getElementById("HEAD");C&&C.addEventListener("click",()=>{v("HEAD","LABEL-6","head")});const g=document.getElementById("NECK");g&&g.addEventListener("click",()=>{v("NECK","LABEL-5","neck")});const E=document.getElementById("CHEST");E&&E.addEventListener("click",()=>{v("CHEST","LABEL-4","chest")});const B=document.getElementById("ABDOMEN_LABEL");B&&B.addEventListener("click",()=>{const H=document.getElementById("ABDOMEN-2");H.style.display==="none"||H.style.display==""?H.style.display="block":H.style.display="none",v("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const c=document.getElementById("UPPER_EXTRMITY");c&&c.addEventListener("click",()=>{v("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const _=document.getElementById("SPINE"),O=document.getElementById("SPINE_LABEL"),P=document.getElementById("LOWER_SPINE_INACTIVE");_&&_.addEventListener("click",()=>{R()}),O&&O.addEventListener("click",()=>{R()}),P&&P.addEventListener("click",()=>{R()});const U=document.getElementById("PELVIS");U&&U.addEventListener("click",()=>{v("PELVIS","LABEL-2","pelvis")});const F=document.getElementById("LOWER_EXTREMITY");F&&F.addEventListener("click",()=>{v("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(C,g)=>{const E=D("ion-col"),B=D("ion-row");return I(),ee(B,null,{default:l(()=>[o(E,{size:"7"},{default:l(()=>[S("div",{innerHTML:y.value.full_body_sk},null,8,Wa)]),_:1}),o(E,{size:"5",class:"form-column"},{default:l(()=>[S("div",Ga,[(I(!0),L(ie,null,Ce(f.value,c=>(I(),L(ie,null,[c.id==="head"?(I(),L("div",Ka,[g[0]||(g[0]=S("h6",null,"Body Part: Head",-1)),o(W,{contentData:N(a)},null,8,["contentData"])])):c.id==="neck"?(I(),L("div",Ya,[g[1]||(g[1]=S("h6",null,"Body Part: Neck",-1)),o(W,{contentData:N(s)},null,8,["contentData"])])):c.id==="chest"?(I(),L("div",Qa,[g[2]||(g[2]=S("h6",null,"Body Part: Chest",-1)),o(W,{contentData:N(n)},null,8,["contentData"])])):c.id==="abdomen"?(I(),L("div",ja,[g[3]||(g[3]=S("h6",null,"Body Part: Abdomen",-1)),o(W,{contentData:N(h)},null,8,["contentData"])])):c.id==="upper_extremity"?(I(),L("div",Xa,[g[4]||(g[4]=S("h6",null,"Body Part: Upper Extremity",-1)),o(W,{contentData:N(r)},null,8,["contentData"])])):c.id==="spine"?(I(),L("div",Za,[g[5]||(g[5]=S("h6",null,"Body Part: Spine",-1)),o(W,{contentData:N(d)},null,8,["contentData"])])):c.id==="pelvis"?(I(),L("div",en,[g[6]||(g[6]=S("h6",null,"Body Part: Pelvis",-1)),o(W,{contentData:N(p)},null,8,["contentData"])])):c.id==="lower_extremity"?(I(),L("div",tn,[g[7]||(g[7]=S("h6",null,"Body Part: Lower Extremity",-1)),o(W,{contentData:N(m)},null,8,["contentData"])])):Z("",!0)],64))),256))])]),_:1})]),_:1})}}}),nn=j(an,[["__scopeId","data-v-5ab54fe8"]]),sn=z({name:"Menu",mixins:[xa],components:{IonContent:De,IonHeader:Se,IonItem:me,IonList:Ne,IonMenu:Le,IonTitle:be,IonToolbar:Be,IonInput:dt,IonPopover:Tt,DashBox:fa,SelectionPopover:sa,BasicInputField:pt,BasicForm:W,List:na,DynamicButton:ke,LabOrdersList:Ta,RadiologyInvestigation:nn},data(){return{segmentContent:"Lab Investigations",iconsContent:te,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Rt,pulseOutline:xt}},computed:{...se(He,["investigations"]),...se(q,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;k.getUseIndexDBStatus()&&k.getModsStatus()?e=await le("testTypes"):e=await pe.getTestTypes(),K(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(a=>M.toStandardHisFormat(M.sessionDate())===M.toStandardHisFormat(a.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),He().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Xe(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(K(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(K(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Xe(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let a of t)for(let s of a.tests)if(s.name===e)return!0;return!1},async saveTest(){await new va().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await Q.getConceptID(this.inputFields[1].value.name,!0)}]),K(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),K(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;k.getUseIndexDBStatus()&&k.getModsStatus()?t=await le("specimens"):t=await pe.getSpecimens("",1e3),this.specimen=await Q.getConceptSet(e.value.name,"",{names:t.map(a=>a.name)}),this.specimen.length==1?(K(this.investigations,"specimen","value",this.specimen[0]),K(this.investigations,"specimen","disabled",!0)):(K(this.investigations,"specimen","value",""),K(this.investigations,"specimen","disabled",!1)),K(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(a=>a==null?void 0:a.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),on={class:"background"},rn={key:0},ln={key:1},dn={key:2},cn={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},un={key:3},pn={class:"ion-padding",slot:"content"},mn={key:4};function hn(e,t,a,s,n,h){const r=D("ion-label"),d=D("ion-segment-button"),p=D("ion-segment"),m=D("VisitsHistory"),y=D("LabOrdersList"),f=D("RadiologyInvestigation");return I(),L("div",on,[o(p,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:l(()=>[o(d,{value:"Lab Investigations",onClick:t[0]||(t[0]=v=>e.setSegmentContent("Lab Investigations"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[3]||(t[3]=[J("Lab Investigations",-1)])]),_:1})]),_:1}),o(d,{value:"Radiology Investigation",onClick:t[1]||(t[1]=v=>e.setSegmentContent("Radiology Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[4]||(t[4]=[J("Radiology Investigation",-1)])]),_:1})]),_:1}),o(d,{value:"Other Investigation",onClick:t[2]||(t[2]=v=>e.setSegmentContent("Other Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[5]||(t[5]=[J("Other Investigation",-1)])]),_:1})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(I(),L("div",rn,[o(m)])):Z("",!0),e.segmentContent=="Other Investigation"?(I(),L("div",ln)):Z("",!0),e.segmentContent=="Lab Investigations"?(I(),L("div",dn,[S("div",cn,[S("span",null,[o(y,{propOrders:e.labOrders},null,8,["propOrders"])])])])):Z("",!0),e.segmentContent=="Radiology Investigation"?(I(),L("div",un,[S("div",pn,[o(f)])])):Z("",!0),e.segmentContent=="Other Investigation"?(I(),L("div",mn)):Z("",!0)])}const is=j(sn,[["render",hn],["__scopeId","data-v-c2f65a77"]]);class gn extends mt{constructor(t,a){super(t,105,a)}}class fn extends mt{constructor(t,a){super(t,25,a)}static async get_____(t="",a=1,s=10){}}async function rs(e){var t,a,s;try{const n=q(),{patient:h}=G(n),r=JSON.parse(JSON.stringify(h.value));return(s=(a=(t=r.allergies)!=null?t:r.allergies={}).unsaved)!=null||(a.unsaved=[]),r.allergies.unsaved.push(...e),de("Allergies appended to patient record successfully"),r}catch(n){ae("Unable to save Allegies!")}}class ls{async onSubmitNotes(t,a,s){const n=new gn(t,a);await n.createEncounter(),await n.saveObservationList(s)}async onSubmitAllergies(t,a,s){try{const n=new fn(t,a);await n.createEncounter(),await n.saveObservationList(s),de("Allergies saved successfully")}catch(n){console.error("Error saving allergies:",n),ae("Failed to save allergies")}}}class ds{constructor(){X(this,"programID");X(this,"providerID");X(this,"patientID");X(this,"date");X(this,"demographics");X(this,"previousDrugPrescriptions",[]);X(this,"previousClinicalNotes");X(this,"previousDrugAllergies");const t=q();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=xe.getSessionDate(),this.providerID=k.getUserID(),this.programID=xe.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),a=t.map(async n=>{const h=n.value,r=await oa.getEncounters(this.patientID,{date:h});await Promise.all(r.map(async d=>{var p;if(d.type.name=="NOTES"){const{observations:m}=d;ve.isEmpty(m)||m.forEach(y=>{if(y.concept_id=="2688"){const f=M.toStandardHisDisplayFormat(y.obs_datetime);ve.isEmpty(this.previousClinicalNotes.hasOwnProperty(f))&&(this.previousClinicalNotes[f]=[]),this.previousClinicalNotes[f].push({date:f,notes:y.value_text})}})}if(d.type.name=="TREATMENT"){const{observations:m}=d;if(!ve.isEmpty(m))for(const y in m){let f="<UNKNOWN CONCEPT>";const v=m[y];try{(p=v==null?void 0:v.concept)!=null&&p.concept_names?f=v.concept.concept_names[0].name:f=await Q.getConceptName(v.concept_id)}catch(g){console.error(v,g)}const R=await xe.resolvePrimaryValue(v),C=M.toStandardHisDisplayFormat(v.date_created);f=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(C)||(this.previousDrugAllergies[C]=[]),this.previousDrugAllergies[C].push({date:C,value:R}))}}}))});await Promise.all(a);const s=t.map(async n=>{const h=await ht.getOrderByPatient(this.patientID,{start_date:n.value});if(!ve.isEmpty(h)){const r=h.map(d=>({drugName:d.drug.name,value:M.toStandardHisTimeFormat(d.order.start_date),dose:d.dose,frequency:_a(d.frequency),prescription:M.toStandardHisFormat(d.order.auto_expire_date),duration:vn(d.order.instructions),other:d}));this.previousDrugPrescriptions.push({prescriptionDate:M.toStandardHisDisplayFormat(n.value),previousPrescriptions:r})}});return await Promise.all(s),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await gt.getPatientVisits(this.patientID,!1)).map(t=>({label:M.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===ia.getSessionDate()}}))}}function vn(e){const t=/(\d+)\s+days/i,a=e.match(t);return a&&a.length>1?parseInt(a[1]):null}async function cs(){const e=q(),{patient:t}=G(e),a=t.value,s=[8809,903,6410,6409];let n;k.getModsStatus()||k.getUseIndexDBStatus()?n=await le("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(f=>f.records):n=await k.getJson("diagnosis",{id:7409,page_size:2e3});const h=n.filter(f=>s.includes(f.concept_id));h.push({concept_id:8809,concept_name_id:926,concept_name_type:"FULLY_SPECIFIED",creator:1,date_created:"2004-06-25T00:00:00.000+02:00",date_voided:null,id:72,locale:"en",locale_preferred:0,name:"Hypertension",uuid:"b99faa1e-8d80-11d8-abbb-0024217bb78e",void_reason:null,voided:0,voided_by:null});const r=a.diagnosis.saved.map(f=>f.value_coded),d=a.diagnosis.unsaved.map(f=>f.value_coded),p=[...r,...d];return h.filter(f=>p.includes(f.concept_id)).map(f=>f.name)}const _n=z({created(){},components:{IonItem:me,IonCol:Ft,IonLabel:ye,IonIcon:Fe},data(){return{iconsContent:te,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let a=0;a<t.length;a++)t[a].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let a=0;a<t.length;a++)t[a].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await ct("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),yn=["onMousemove","onMouseout"],bn={class:"route-label"};function Dn(e,t,a,s,n,h){const r=D("ion-label"),d=D("ion-col"),p=D("ion-row"),m=D("ion-icon");return I(!0),L(ie,null,Ce(e.localMedicalDrugsList,(y,f)=>(I(),L("div",{id:"df",class:"medication-item",key:f,onMousemove:v=>e.highlightItem(f),onMouseout:v=>e.undoHighlightItem(f)},[o(p,{class:"medication-header"},{default:l(()=>[o(d,{class:ue(["ion-text-wrap",e.highLightBnd(y)])},{default:l(()=>[o(r,{id:e.asignLblID(f),class:"medication-name"},{default:l(()=>[J(x(y.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),o(p,{class:"medication-details"},{default:l(()=>[o(d,{size:"10",class:ue(["ion-text-wrap details-col",e.highLightBnd(y)])},{default:l(()=>[o(r,{class:"details-text"},{default:l(()=>[J(x(y.dose)+" / "+x(y.frequency)+" / daily / "+x(y.duration)+" / until "+x(y.prescription)+" ",1),S("span",bn,x(y.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(I(),ee(d,{key:0,class:ue([e.highLightBnd(y),"actions-col"]),size:"2"},{default:l(()=>[o(r,{class:ue(["action-button",e.asignSpanLblID(f)]),onClick:v=>e.editItemAtIndex(f)},{default:l(()=>[o(m,{icon:e.iconsContent.edit},null,8,["icon"])]),_:1},8,["class","onClick"]),o(r,{class:ue(["action-button",e.asignSpanLblID(f)]),onClick:v=>e.removeItemAtIndex(f,v)},{default:l(()=>[o(m,{icon:e.iconsContent.delete},null,8,["icon"])]),_:1},8,["class","onClick"])]),_:2},1032,["class"])):Z("",!0)]),_:2},1024)],40,yn))),128)}const us=j(_n,[["render",Dn],["__scopeId","data-v-01c693a3"]]),Sn={key:0,class:"custom-allergy-container"},Cn={class:"button-group"},In=z({watch:{},name:"AllergiesComponent"}),kn=z({...In,setup(e){const t=ra(),a=q(),s=oe(()=>t.selectedMedicalAllergiesList),n=oe(()=>a.patient),h=oe(()=>t.medicalAllergiesList),r=w(g(8,"item-")),d=w(""),p=w(!1),m=[{multi_Selection:!0,show_list_label:!0,unqueId:r.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:v,listFilteredFN:()=>{},searchTextFN:R,use_internal_filter:!0,show_error:w(!1),error_message:"please select a User",disabled:w(!1)}],y=w(!1);Ie(async()=>{f()});const f=()=>{t.current_patient.ID!=n.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(n.value))};function v(c){c.forEach(_=>{_.selected==!0&&_.name==="Other"&&(p.value=_.name==="Other"),_.selected==!1&&_.name==="Other"&&B()}),t.setSelectedMedicalAllergiesList(c),C()}async function R(c){const _=c,O=await Q.getConceptSet("OPD Medication",_);O.map(H=>({label:H.name,value:H.name,other:H}));const P=la(_),F=da(P,O).sort((H,$e)=>H.name.localeCompare($e.name));t.setMedicalAllergiesList(F),C()}function C(){const c=h.value;s.value.forEach(O=>{let P=!1;c.forEach((U,F)=>{U.concept_id==O.concept_id&&O.selected===!0&&(c[F]=O,P=!0)}),!P&&O.selected===!0&&c.push(O)});const _=c.filter((O,P,U)=>P===U.findIndex(F=>(F==null?void 0:F.concept_id)===(O==null?void 0:O.concept_id)));t.setMedicalAllergiesList(_)}function g(c=8,_=""){const O="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let P=_;for(let U=0;U<c;U++)P+=O.charAt(Math.floor(Math.random()*O.length));return P+="-".concat(Date.now()),P}async function E(c){try{const _=c.trim();if(_){const O={name:_,selected:!0,concept_id:g(8,"12"),concept_name_id:g(8,"34")};t.setMedicalAllergiesList([...h.value,O]),t.setSelectedMedicalAllergiesList(O),p.value=!1,y.value=!0,d.value="";const P=t.findSelectedAllergyByName("Other");t.unselectOther(P)}}catch(_){console.error(_)}}const B=()=>{p.value=!1,d.value="",y.value=!1;const c=t.findSelectedAllergyByName("Other");c&&t.unselectOther(c)};return(c,_)=>(I(),ee(N(Ht),null,{default:l(()=>[o(N(Ut),null,{default:l(()=>[o(N(ye),{class:"header-container"},{default:l(()=>[o(N(Fe),{icon:N(Vt),class:"allergy-icon"},null,8,["icon"]),_[3]||(_[3]=S("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1})]),_:1}),o(N(Jt),null,{default:l(()=>[o(ca,{multiSelection:m[0].multi_Selection,show_label:m[0].show_list_label,uniqueId:m[0].unqueId,name_of_list:m[0].name_of_list,choose_place_holder:m[0].placeHolder,"items_-list":h.value,use_internal_filter:m[0].use_internal_filter,disabled:m[0].disabled.value,onItemListUpDated:m[0].listUpdatedFN,onItemListFiltered:m[0].listFilteredFN,onItemSearchText:m[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),p.value?(I(),L("div",Sn,[o(N(dt),{modelValue:d.value,"onUpdate:modelValue":_[0]||(_[0]=O=>d.value=O),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),S("div",Cn,[o(N(Me),{onClick:_[1]||(_[1]=O=>E(d.value)),class:"addCustomAllergyBtn"},{default:l(()=>[..._[4]||(_[4]=[J(" Add Allergy ",-1)])]),_:1}),o(N(Me),{onClick:_[2]||(_[2]=O=>B()),fill:"clear",class:"cancelBtn"},{default:l(()=>[o(N(Fe),{icon:N(zt),slot:"icon-only"},null,8,["icon"])]),_:1})])])):Z("",!0)]),_:1})]),_:1}))}}),ps=j(kn,[["__scopeId","data-v-4de36202"]]);async function ms(){var e,t,a;try{const s=q(),{patient:n}=G(s),h=wn(),r=JSON.parse(JSON.stringify(n.value));if(h.length>0){(a=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(m=>m.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...h];else{const m={NCD_Drug_Orders:h};r.MedicationOrder.unsaved.push(m)}const p=Pe();return p.setMedicationRunOutDate(On()),p.clearMedicationDataStores(),de("Drug order(s) has been created"),r}else ae("Unable to create drug orders!")}catch(s){ae("Unable to create drug orders!")}}function et(){try{const e=new Date(k.getSessionDate()),a=Ee().selectedMedicalDrugsList;let s=0;if(a.forEach(m=>{const y=parseInt(m.duration,10);!isNaN(y)&&y>s&&(s=y)}),s<=0)return{date:null,formattedDate:null};const n=new Date(e);n.setDate(e.getDate()+s);const h=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),d=n.getFullYear(),p="".concat(h,"/").concat(r,"/").concat(d);return{date:n,formattedDate:p}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function On(){try{const e=new Date(k.getSessionDate()),a=Pe().selectedNCDMedicationList;let s=0;if(a.forEach(m=>{const y=parseInt(m.duration,10);!isNaN(y)&&y>s&&(s=y)}),s<=0)return{date:null,formattedDate:null};const n=new Date(e);n.setDate(e.getDate()+s);const h=String(n.getDate()).padStart(2,"0"),r=String(n.getMonth()+1).padStart(2,"0"),d=n.getFullYear(),p="".concat(h,"/").concat(r,"/").concat(d);return{date:n,formattedDate:p}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const wn=()=>{const e=Pe();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((n,h)=>n+Number(h),0);const a=vt.getSessionDate(),s=Ln(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(s==null?void 0:s.value)||0,start_date:a,auto_expire_date:_t(a,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:Mn(t),frequency:(s==null?void 0:s.code)||""}})},Mn=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function hs(){var e,t,a;try{const s=q(),{patient:n}=G(s),h=An(),r=JSON.parse(JSON.stringify(n.value));if(h.length>0){(a=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(m=>m.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...h];else{const m={NCD_Drug_Orders:h};r.MedicationOrder.unsaved.push(m)}return Ee().clearSelectedMedicalDrugsList(),de("Drug order(s) has been created"),r}else ae("Unable to create drug orders!")}catch(s){ae("Unable to create drug orders!")}}const An=()=>Ee().selectedMedicalDrugsList.map(t=>{const a=vt.getSessionDate(),s=ne.find(n=>n.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(s==null?void 0:s.value)||0,start_date:a,auto_expire_date:_t(a,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(s==null?void 0:s.code)||""}}),Ln=e=>{const a=Pe().selectedNCDMedicationList.find(n=>n.drug_id===e);if(!a||!a.dosage)return null;switch(["morning","afternoon","evening"].reduce((n,h)=>n+(a.dosage[h]?1:0),0)){case 1:return a.dosage.morning?ne.find(n=>n.code==="QAM"):a.dosage.afternoon?ne.find(n=>n.code==="QNOON"):a.dosage.evening?ne.find(n=>n.code==="QPM"):ne.find(n=>n.code==="OD");case 2:return ne.find(n=>n.code==="BD");case 3:return ne.find(n=>n.code==="TDS");default:return ne.find(n=>n.code==="Unknown")}},_t=(e,t)=>{const a=new Date(e);return a.setDate(a.getDate()+parseInt(t)),M.toStandardHisFormat(a)},Nn=()=>Ee().nonPharmalogicalTherapyAndOtherNotes,Bn=lt("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=ua(),t=[];this.items.forEach(s=>{s.checked==!0&&t.push({concept_id:11023,value_text:s.label,obs_datetime:M.toStandardHisFormat(k.getSessionDate()),location_id:e.facilityLocation.code})});const a=Nn();a&&t.push({concept_id:2592,obs_datetime:k.getSessionDate(),value_text:a,location_id:e.facilityLocation.code});try{if(t.length>0)return this.clearSelectednonPharmaTherapyStore(),de("Non Pharma Therapy staged successfully!"),await En(t)}catch(s){ae("Unable to update Non Pharma Therapy!")}},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function En(e){var t,a,s;try{const n=q(),{patient:h}=G(n),r=JSON.parse(JSON.stringify(h.value));return(s=(a=(t=r.notes)!=null?t:r.notes={}).unsaved)!=null||(a.unsaved=[]),r.notes.unsaved.push(...e),r}catch(n){ae("Unable to create non pharmalogical notes!")}}const Pn={class:"checklist-container"},$n=z({watch:{},name:"xxxComponent"}),Tn=z({...$n,setup(e){const t=q(),a=oe(()=>t.patient),s=Bn(),n=s.items;Ie(async()=>{h()});const h=()=>{s.current_patient.ID!=a.value.ID&&(s.clearSelectednonPharmaTherapyStore(),s.setCurrentPatient(a.value))};return _e(()=>a.value,async r=>{}),(r,d)=>(I(),L("div",Pn,[(I(!0),L(ie,null,Ce(N(n),p=>(I(),ee(N(me),{key:p.id,class:"no-border"},{default:l(()=>[o(N(qt),{id:p.id,modelValue:p.checked,"onUpdate:modelValue":m=>p.checked=m,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),o(N(ye),{style:{"font-size":"16px","font-weight":"600"}},{default:l(()=>[J(x(p.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),gs=j(Tn,[["__scopeId","data-v-371e920f"]]),xn=z({components:{IonContent:De,IonHeader:Se,IonItem:me,IonList:Ne,IonMenu:Le,IonTitle:be,IonToolbar:Be,BasicInputField:pt,IonDatetime:Gt,IonBadge:Wt,DateInputField:ba,DynamicButton:ke},setup(){const e=Re(),t=w(0),a=oe(()=>e.getDisabledDates()),s=oe(()=>e.getAssignedAppointments()),n=w();return{disabledDates:a,datesCounts:s,appointment_count:t,calendarOutline:Kt,inputPRDate:n}},data(){return Y(),je(),{iconsContent:te,date:new Date(k.getSessionDate()),tomorrow:new Date(k.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(k.getSessionDate())}},computed:{...se(Y,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...se(Re,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...se(q,["patient"]),...se(je,["activeProgram"]),calendarDate(){const e=Y();return e.currentSelectedNextAppointmentDate?M.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var t;const e=Y();return((t=this.activeProgram)==null?void 0:t.program_id)===14?et():e.getAppointmentMedicationRunOutDate()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext(),this.clearNextAppointment())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await ha().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),ga();const e=k.getUserID(),t=new gt;this.appointment=new we(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),et()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(k.getSessionDate()),this.minDate=new Date(k.getSessionDate())},updateNextAppointment(){Y().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(Re().setsssignedAppointmentsDates(e,!0),this.calendarDate=M.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),Y().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(ma().apiStatus)try{const a=await we.getDailyAppointments(M.toStandardHisFormat(e),M.toStandardHisFormat(e));this.appointment_count=a.length}catch(a){}},getCounter(e){const t=M.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new ya().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=M.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),ut(pa,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:n=>{},confirm:async n=>{n.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=M.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await ht.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(k.getSessionDate());e.setDate(1);const t=new Date(k.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const a=await we.getDailyAppointments(M.toStandardHisFormat(e),M.toStandardHisFormat(t)),s=this.filterUniqueAppointments(a),n={};s.forEach(h=>{const r=new Date(h.appointment_date),d=M.toStandardHisFormat(r);n[d]||(n[d]=0),n[d]++}),Object.keys(n).forEach(h=>{this.appointmentCountsCache[h]=n[h]})}catch(a){console.error("Error fetching appointments for date range:",a)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(a=>{const s="".concat(a.given_name,"_").concat(a.family_name,"_").concat(a.birthdate,"_").concat(a.appointment_date);t.has(s)||t.set(s,a)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=M.toStandardHisFormat(e),a=await we.getDailyAppointments(M.toStandardHisFormat(e),M.toStandardHisFormat(e));this.appointmentCountsCache[t]=a.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){Y().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:M.toStandardHisFormat(e)===M.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){Y().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=Y();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))},clearNextAppointment(){Y().clearAppointmentMedicationRunOutDate()}}}),Rn={class:"card_content"},Fn={class:"count-badge"},Hn={class:"dates_title"},Un={class:"sub_data"},Vn={class:"dates_title"},Jn={class:"sub_data"},zn={class:"dates_title"},qn={class:"sub_data"},Wn={class:"dates_title"},Gn={class:"sub_data"};function Kn(e,t,a,s,n,h){const r=D("VueDatePicker"),d=D("ion-col"),p=D("DynamicButton"),m=D("ion-item"),y=D("ion-row"),f=D("DateInputField");return I(),L("div",Rn,[o(y,null,{default:l(()=>[o(d,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:l(()=>[o(r,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=v=>e.runOutDate.date=v)},{day:l(({day:v,date:R})=>[(I(),L("p",{key:0,class:ue({"run-out-date":e.isRunOutDate(R)}),style:{"font-weight":"600","font-size":"20px"}},[S("span",null,[J(x(v),1),S("sup",Fn,x(e.getCounter(R)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),o(d,null,{default:l(()=>[o(m,null,{default:l(()=>[S("div",Hn,[t[3]||(t[3]=S("div",null,[J("Suggested Next Appointment Date "),S("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),S("div",Un,[J(x(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(I(),ee(p,{key:0,onClick:t[1]||(t[1]=v=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):Z("",!0)])])]),_:1}),o(m,null,{default:l(()=>[S("div",Vn,[t[4]||(t[4]=S("div",null,"User set appointment date",-1)),S("div",Jn,x(e.calendarDate),1)])]),_:1}),o(m,null,{default:l(()=>[S("div",zn,[t[5]||(t[5]=S("div",null,"Appointments",-1)),S("div",qn,x(e.appointment_count),1)])]),_:1}),o(m,null,{default:l(()=>[S("div",Wn,[t[6]||(t[6]=S("div",null,"Appointment limit (per/day)",-1)),S("div",Gn,x(e.appointment_count)+"/"+x(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),o(y,null,{default:l(()=>[o(d,{size:"4"},{default:l(()=>[o(f,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=v=>e.handleInput(v))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const fs=j(xn,[["render",Kn],["__scopeId","data-v-381d232b"]]);export{ps as A,us as D,is as I,fs as N,ds as P,ls as T,xa as _,hs as a,gs as b,ms as c,cs as g,rs as s,Bn as u};
